<!-- Site design by Brendan Berg 2004 -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<script language="JavaScript" src="scripts.js"></script>
	<meta http-equiv="content-type" content="text/html;charset=ISO-8859-1" />
	<title>Interfascia &raquo; documentation &raquo; GUIController</title>
	<style type='text/css' media='all'>@import "style.css";</style>
</head>

<body onload="buildMenus()">

	<div class="navigation">
		<p><span class='title'><i>DOCUMENTATION</i></span></p>

		<form name="navigation"><select name="projects" onchange="loadPage(this)">
			<option>Please enable JavaScript</option>
			<option>---------------------</option>
		</select>
		<select name="sketches" onchange="loadPage(this)">
			<option>---------------------</option>
		</select>
		<select name="exhibitions" onchange="loadPage(this)">
			<option>---------------------</option>
		</select></form>
	</div>
	
	<div>
		<p><span class='header'>GUIController</span></p>

		<p>The GUIController object keeps track of all GUI components and
		handles the forwarding of events from the Processing applet to the
		individual GUI components. All you need to do is create a new 
		GUIController that references the current PApplet and add desired
		GUIComponents to the controller.</p>

		<p>&nbsp;</p>

		<p><b>Syntax</b></p>
		
		<p><tt><pre>GUIController c = new GUIController(this);
c.add(button);
c.requestFocus(button);</pre></tt></p>

		<p>&nbsp;</p>

		<p><b>Methods</b></p>

		<p class="method">GUIController(PApplet parent);<br />
		GUIController(PApplet parent, boolean visible);</p>
		<p class="description"><b><tt>parent,</tt></b> the Processing applet where the GUI components
		will be drawn; usually the keyword 'this' is used.<br />
		<span class="code">visible,</span> whether the components in the controller will be drawn.</p>

		<p class="method">add(GUIComponent component);</p>
		<p class="description">The add() method adds a GUI component to the 
		controller's list of components it controls.<br />
		<br />
		<span class="code">component,</span> component to be added</p>

		<p class="method">remove(GUIComponent component);</p>
		<p class="description">The remove() method removes a GUI component 
		to the controller's list of components it controls.<br />
		<br />
		<span class="code">component,</span> component to be removed</p>

		<p class="method">requestFocus(GUIComponent component);</p>
		<p class="description">The requestFocus() method requests that the 
		controller send keyboard events to the specified component. <br />
		<br />
		<span class="code">component,</span> component to receive focus</p>

		<p class="method">yieldFocus(GUIComponent component);</p>
		<p class="description">The yieldFocus() method tells the controller 
		to no longer forward keyboard events to the specified component.<br />
		<br />
		<span class="code">component,</span> component to lose focus</p>

		<p class="method">getComponentWithFocus();</p>
		<p class="description">The getComponentWithFocus() method returns 
		the component that is currently receiving keyboard events.</p>

		<p class="method">getFocusStatusForComponent(GUIComponent component);</p>
		<p class="description">The getFocusStatusForComponent() method returns 
		true if the specified component has keyboard focus, false otherwise. <br />
		<br />
		<span class="code">component,</span> component whose focus status is in question</p>

		<p class="method">copy(String s);</p>
		<p class="description">The copy() method copies the specified string to 
		the system's clipboard. <br />
		<br />
		<span class="code">s,</span> the string to be copied to the clipboard</p>

		<p class="method">paste();</p>
		<p class="description">The paste() method returns the string that is 
		currently in the system's clipboard.</p>

		<p>&nbsp;</p>

		<p><b>Example</b><br />
<tt><pre>GUIController c;
Button b;

void setup() {
   c = new GUIController(this);
   b = new Button("Click!", 20, 20, 40);

   c.add(b);
}

void draw() {

}</pre></tt>
		</p>
	</div>

</body>

</html>
