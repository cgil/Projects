<!-- Site design by Brendan Berg 2004 -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<script language="JavaScript" src="scripts.js"></script>
	<meta http-equiv="content-type" content="text/html;charset=ISO-8859-1" />
	<title>Interfascia &raquo; documentation &raquo; IFTextField</title>
	<style type='text/css' media='all'>@import "style.css";</style>
</head>

<body onload="buildMenus()">

	<div class="navigation">
		<p><span class='title'><i>DOCUMENTATION</i></span></p>

		<form name="navigation"><select name="projects" onchange="loadPage(this)">
			<option>Please enable JavaScript</option>
			<option>---------------------</option>
		</select>
		<select name="sketches" onchange="loadPage(this)">
			<option>---------------------</option>
		</select>
		<select name="exhibitions" onchange="loadPage(this)">
			<option>---------------------</option>
		</select></form>
	</div>
	
	<div>
		<p><span class='header'>IFTextField</span></p>

		<p>The IFTextField object creates a new text field GUI component. Text
		fields are single-line boxes that accept text input, mouse and keyboard
		selection of text, and cut/copy/paste to the system clipboard.</p>

		<p>&nbsp;</p>

		<p><b>Method Summary</b></p>

		<p class="method">IFTextField(String label, int x, int y);<br />
		IFTextField(String label, int x, int y, int width);<br />
		IFTextField(String label, int x, int y, int width, String contents);</p>
		<p class="description">
		<span class="code">label,</span> the name of the text field (not 
		displayed)<br />
		<span class="code">x,</span> the X position of the text field's upper 
		left hand corner<br />
		<span class="code">y,</span> the Y position of the text field's upper 
		left hand corner<br />
		<span class="code">width,</span> the width of the text field<br />
		<span class="code">contents,</span> the text to be displayed in the
		text field</p>

		<p class="method">setLabel(String newLabel)</p>
		<p class="description">sets the name of the text field. The text
		field name is used when submitting the interfaces current state to
		a web server.<br />
		<br />
		<span class="code">newLabel,</span> the new name for the text field</p>
		
		<p class="method">getLabel()</p>
		<p class="description">returns a String object representing the
		text field's name<br /></p>
		
		<p class="method">setValue(String contents)</p>
		<p class="description">sets the text displayed in the text field<br />
		<br />
		<span class="code">contents,</span> the new text to be displayed in
		the text field</p>
		
		<p class="method">getValue()</p>
		<p class="description">returns a String object representing the
		text field's contents<br /></p>
		
		<p class="method">setWidth(int width)</p>
		<p class="description">sets the width of the text field<br />
		<br />
		<span class="code">width,</span> the new width for the text field</p>
		
		<p class="method">getWidth()</p>
		<p class="description">returns the width of the text field in integer
		form.</p>
		
		<p class="method">setHeight(int height)</p>
		<p class="description">sets the height of the text field<br />
		<br />
		<span class="code">height,</span> the new height for the text field</p>
		
		<p class="method">getHeight()</p>
		<p class="description">returns the height of the text field in integer
		form.</p>
		
		<p class="method">setSize(int width, int height)</p>
		<p class="description">convenience method to set the dimensions 
		of the text field<br />
		<br />
		<span class="code">width,</span> the new width for the text field<br />
		<span class="code">height,</span> the new height for the text field</p>
		
		<p class="method">setX(int x)</p>
		<p class="description">sets the X position of the text field relative 
		to its GUIController<br />
		<br />
		<span class="code">x,</span> the new X position for the text field</p>
		
		<p class="method">getX()</p>
		<p class="description">returns the integer X position of the 
		text field relative to its GUIController.</p>
		
		<p class="method">setY(int y)</p>
		<p class="description">sets the Y position of the text field relative
		to its GUIController<br />
		<br />
		<span class="code">y,</span> the new Y position for the text field</p>
		
		<p class="method">getY()</p>
		<p class="description">returns the integer Y position of the 
		text field relative to its GUIController.</p>
		
		<p class="method">setPosition(int x, int y)</p>
		<p class="description">convenience method to set the position 
		of the text field relative to its GUIController<br />
		<br />
		<span class="code">x,</span> the new X position for the text field<br />
		<span class="code">y,</span> the new Y position for the text field</p>
		
		<p class="method">addActionListener(Object listener);</p>
		<p class="description">adds an action listener Object which receives
		GUIEvents when the text field is clicked or released. You must implement
		the <a href="actionperformed.htm">actionPerformed()</a> method in order
		to receive events from the text field.<br />
		<br />
		<span class="code">listener,</span> the object that events are sent to 
		(usually 'this').</p>

		<p>&nbsp;</p>

		<p><b>Example</b></p>
		
<pre class="codeblock">import interfascia.*;

GUIController c;
IFTextField t;

void setup() {
   c = new GUIController(this);
   t = new IFTextField("Input", 30, 30);
}

void draw() {
}
</pre>
	</div>

</body>

</html>
